apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: namenode
spec:
  serviceName: namenode-svc
  replicas: 1
  selector:
    matchLabels:
      app: namenode # == .spec.template.metadata.lables
  template:
    metadata:
      labels:
        app: namenode # == .spec.selector.matchLabels
    spec:
      containers:
        - name: namenode
          image: apache/hadoop:3.3.6
          command:
            - /opt/starter.sh
            - hdfs
            - namenode
          ports:
            - name: rpc
              containerPort: 8020
            - name: http
              containerPort: 9870
          env:
            - name: ENSURE_NAMENODE_DIR # dfs.namenode.name.dir
              value: "/data/dfs/name"
          envFrom:
            - configMapRef:
                name: hadoop-conf
          volumeMounts:
            - name: namenode-pvc
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: namenode-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 128Mi
        storageClassName: namenode-storage
---
apiVersion: v1
kind: Service
metadata:
  name: namenode-svc
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: namenode # == pod template: labels
  ports:
    - protocol: TCP
      name: rpc
      port: 8020
      targetPort: 8020 # == pod template: spec ports container port
    - protocol: TCP
      name: http
      port: 9870
      targetPort: 9870
---
apiVersion: v1
kind: Service
metadata:
  name: namenode-nodeport
spec:
  type: NodePort
  selector:
    app: namenode # == pod template: labels
  ports:
    - protocol: TCP
      name: http
      port: 9870
      targetPort: 9870
      nodePort: 30870 # The range of valid ports is 30000-32767

